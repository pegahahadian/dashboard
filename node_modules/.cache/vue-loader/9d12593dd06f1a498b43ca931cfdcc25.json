{"remainingRequest":"/home/pegah/Desktop/Projects/vue-github/vuex-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pegah/Desktop/Projects/vue-github/vuex-example/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pegah/Desktop/Projects/vue-github/vuex-example/src/components/HelloWorld.vue","mtime":1597238830474},{"path":"/home/pegah/Desktop/Projects/vue-github/vuex-example/node_modules/cache-loader/dist/cjs.js","mtime":1597239151042},{"path":"/home/pegah/Desktop/Projects/vue-github/vuex-example/node_modules/babel-loader/lib/index.js","mtime":1597239135736},{"path":"/home/pegah/Desktop/Projects/vue-github/vuex-example/node_modules/cache-loader/dist/cjs.js","mtime":1597239151042},{"path":"/home/pegah/Desktop/Projects/vue-github/vuex-example/node_modules/vue-loader/lib/index.js","mtime":1597239152136}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions, mapGetters } from 'vuex'\n\nexport default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      spellName: null\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'spells',\n      'singleSpell',\n      'base',\n      'key'\n    ]),\n  },\n  mounted() {\n    this.fetchSpells()\n  },\n  methods: {\n    ...mapActions([\n      'fillSpells',\n      'fillSingleSpell'\n    ]),\n    fetchSpells() {\n      const base = this.base\n      const key = this.key\n      fetch(`${base}/spells?key=${key}`)\n      .then(resp => resp.json())\n      .then(obj => {\n        this.fillSpells(obj)\n      })\n    },\n    search() {\n      const singleSpell = this.spells.filter(spell => spell.spell.toLowerCase().includes(this.spellName.toLowerCase()))\n      this.fillSingleSpell(singleSpell)\n    }\n  }\n}\n",{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div>\n      <label for=\"spell-name\">\n        Search by Spell Name\n        <input type=\"text\" v-model=\"spellName\" v-on:keyup.enter=\"search\" id=\"spell-name\" />\n      </label>\n      <button @click=\"search\">Search</button>\n    </div>\n    <table>\n      <thead>\n        <tr>\n          <th>Spell</th>\n          <th>Type</th>\n          <th>Effect</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"spell in (singleSpell.length > 0 ? singleSpell : spells)\" :key=\"spell.id\">\n          <td>{{ spell.spell }}</td>\n          <td>{{ spell.type }}</td>\n          <td>{{ spell.effect }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex'\n\nexport default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      spellName: null\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'spells',\n      'singleSpell',\n      'base',\n      'key'\n    ]),\n  },\n  mounted() {\n    this.fetchSpells()\n  },\n  methods: {\n    ...mapActions([\n      'fillSpells',\n      'fillSingleSpell'\n    ]),\n    fetchSpells() {\n      const base = this.base\n      const key = this.key\n      fetch(`${base}/spells?key=${key}`)\n      .then(resp => resp.json())\n      .then(obj => {\n        this.fillSpells(obj)\n      })\n    },\n    search() {\n      const singleSpell = this.spells.filter(spell => spell.spell.toLowerCase().includes(this.spellName.toLowerCase()))\n      this.fillSingleSpell(singleSpell)\n    }\n  }\n}\n</script>\n"]}]}